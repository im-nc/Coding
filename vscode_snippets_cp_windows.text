"cpp": {
			"prefix": "test",
			"body": [
				"// imnc, on $CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR.", 
				"",
				"#include <bits/stdc++.h>",
				"#include <ext/pb_ds/assoc_container.hpp>",
				"",
				"using namespace std;",
				"using namespace __gnu_pbds;",
				"",
				"",
				"#define int int64_t",
				"#define vi vector<int>",
				"#define sz(v) ((int)v.size())",
				"#define all(v) v.begin(), v.end()",
				"#define for0(n, _) for (int _ = 0; _ < n; _++)",
				"#define for1(n, _) for (int _ = 1; _ < n; _++)",
				"#define pii pair<int, int>",
				"#define ll long long",
				"#define endl '\\n'",
				"#define sza(x) ((int)x.size())",
				"#define usi unordered_set<int>",
				"#define inf 2e18",
				"#define ar array",
				"#define popc(a) __builtin_popcount(a)",
				"#define gcd(a, b) __gcd(a, b)",
				"#define ld long double",
				"",
				"",
				"const int MAX_N = 1e5 + 5;",
				"const ll MOD = 1e9 + 7;",
				"const ll INF = 1e9;",
				"const ld EPS = 1e-9;",
				"",
				"",
				"template <typename T>",
					"using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;",
					"",
				"",
				"#ifdef LOCAL",
					"#define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)",
					"#else",
					"#define dbg(...)",
					"#endif",
					"",
					"",
				"void sol()",
				"{",
				"	$1",
				"}",
				"",
				"",
				"int32_t main()",
				"{",
				"    ios_base::sync_with_stdio(0);",
				"    cin.tie(0);",
				"    cout.tie(0);",
				"    int tt = 1;",
				"    cin >> tt;",
				"    while (tt--)",
				"    {",
				"        sol();",
				"        cout << endl;",
				"    }",
				"    return 0;",
				"}"
			],
			"description": "Piece of code for testcase based"
		},
		"bare minimum cpp programme": {
			"prefix": "dir",
			"body": [
				"// imnc, on $CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR.", 
					"",
					"",
					"#include <bits/stdc++.h>",
					"#include <ext/pb_ds/assoc_container.hpp>",
					"",
					"",
					"using namespace std;",
					"using namespace __gnu_pbds;",
					"",
					"",
					"#define int int64_t",
					"#define vi vector<int>",
					"#define sz(v) ((int)v.size())",
					"#define all(v) v.begin(), v.end()",
					"#define for0(n, _) for (int _ = 0; _ < n; _++)",
					"#define for1(n, _) for (int _ = 1; _ < n; _++)",
					"#define pii pair<int, int>",
					"#define ll long long",
					"#define endl '\\n'",
					"#define sza(x) ((int)x.size())",
					"#define usi unordered_set<int>",
					"#define inf 2e18",
					"#define ar array",
					"#define popc(a) __builtin_popcount(a)",
					"#define gcd(a, b) __gcd(a, b)",
					"#define ld long double",
					"",
					"",
					"const int MAX_N = 1e5 + 5;",
					"const ll MOD = 1e9 + 7;",
					"const ll INF = 1e9;",
					"const ld EPS = 1e-9;",
					"",
					"",
					"template <typename T>",
					"using pbds = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;",
					"",
					"",
					"#ifdef LOCAL",
					"#define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)",
					"#else",
					"#define dbg(...)",
					"#endif",
					"",
					"",
					"int32_t main()",
					"{",
					"    ios_base::sync_with_stdio(0);",
					"    cin.tie(0);",
					"    cout.tie(0);",
					"	$1"
					"    return 0;",
					"}"
			],
			"description": "For direct solutions"
		},
		"Cpp Functions": {
			"prefix": "func_templ_def",
			"body": [
				
					"int max(int x, int y) { return x > y ? x : y; }",
					"int min(int x, int y) { return x < y ? x : y; }",
					"template <typename A, typename B>",
					"ostream &operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << \", \" << p.second << ')'; }",
					"template <typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type>",
					"ostream &operator<<(ostream &os, const T_container &v)",
					"{",
					"    os << '{';",
					"    string sep;",
					"    for (const T &x : v)",
					"        os << sep << x, sep = \", \";",
					"    return os << '}';",
					"}",
					"void dbg_out() { cerr << endl; }",
					"template <typename Head, typename... Tail>",
					"void dbg_out(Head H, Tail... T)",
					"{",
					"    cerr << ' ' << H;",
					"    dbg_out(T...);",
					"}",
					"",
					"",
				"unsigned long long factorial(int n) {",
				"\tunsigned long long fact = 1;",
				"\tfor (int i = 1; i <= n; ++i) {",
				"\t\tfact *= i;",
				"\t}",
				"\treturn fact;",
				"}",
				"",
				"unsigned long long nCr(int n, int r) {",
				"\treturn factorial(n) / (factorial(r) * factorial(n - r));",
				"}",
				"",
				"unsigned long long nPr(int n, int r) {",
				"\treturn factorial(n) / factorial(n - r);",
				"}",
				"",
				"int gcd(int a, int b) {",
				"\twhile (b != 0) {",
				"\t\tint temp = b;",
				"\t\tb = a % b;",
				"\t\ta = temp;",
				"\t}",
				"\treturn a;",
				"}",
				"",
				"unsigned long long lcm(int a, int b) {",
				"\treturn (a / gcd(a, b)) * b;",
				"}",
				"",
				"bool isPrime(int n) {",
				"\tif (n <= 1)",
				"\t\treturn false;",
				"\tif (n <= 3)",
				"\t\treturn true;",
				"\tif (n % 2 == 0 || n % 3 == 0)",
				"\t\treturn false;",
				"\tfor (int i = 5; i * i <= n; i += 6) {",
				"\t\tif (n % i == 0 || n % (i + 2) == 0)",
				"\t\t\treturn false;",
				"\t}",
				"\treturn true;",
				"}",
				"",
				"bool isPalindrome(int n) {",
				"\tint original = n;",
				"\tint reversed = 0;",
				"\twhile (n > 0) {",
				"\t\treversed = reversed * 10 + n % 10;",
				"\t\tn /= 10;",
				"\t}",
				"\treturn original == reversed;",
				"}",
				""
			],
			"description": "Templates, Definitions and Functions"
		},
		
		"Python Input Functions": {
			"prefix": "pyin",
			"body": [
				"import sys",
				"input = sys.stdin.readline",
				"",
				"def inp():",
				"    return int(input())",
				"",
				"def inlt():",
				"    return list(map(int, input().split()))",
				"",
				"def insr():",
				"    s = input()",
				"    return list(s[:len(s) - 1])",
				"",
				"def invr():",
				"    return map(int, input().split())"
			],
			"description": "Python input functions for integer, list, string, and map inputs"
		},
